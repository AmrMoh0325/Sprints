
SPI_UART_Chat_APP.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004ae  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  000004ae  00000522  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000532  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000564  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000100  00000000  00000000  000005a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000105c  00000000  00000000  000006a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000097d  00000000  00000000  000016fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000891  00000000  00000000  00002079  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001f8  00000000  00000000  0000290c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005c8  00000000  00000000  00002b04  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000082c  00000000  00000000  000030cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a8  00000000  00000000  000038f8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee ea       	ldi	r30, 0xAE	; 174
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 55 02 	jmp	0x4aa	; 0x4aa <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#include "DataTypes.h"
#include "MCAL/SPI/SPI.h"
#include "MCAL/UART/UART.h"

int main(void)
{
  82:	cf 93       	push	r28
  84:	df 93       	push	r29
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	cf 5f       	subi	r28, 0xFF	; 255
  8c:	d1 09       	sbc	r29, r1
  8e:	0f b6       	in	r0, 0x3f	; 63
  90:	f8 94       	cli
  92:	de bf       	out	0x3e, r29	; 62
  94:	0f be       	out	0x3f, r0	; 63
  96:	cd bf       	out	0x3d, r28	; 61
   uint8_t Send_Buffer[255]={0};
  98:	fe 01       	movw	r30, r28
  9a:	31 96       	adiw	r30, 0x01	; 1
  9c:	8f ef       	ldi	r24, 0xFF	; 255
  9e:	df 01       	movw	r26, r30
  a0:	1d 92       	st	X+, r1
  a2:	8a 95       	dec	r24
  a4:	e9 f7       	brne	.-6      	; 0xa0 <main+0x1e>
   UART_Init();
  a6:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <UART_Init>
   SPI_Init();
  aa:	0e 94 bc 01 	call	0x378	; 0x378 <SPI_Init>
    /* Replace with your application code */
    while (1) 
    {
       UART_ReceiveString(Send_Buffer,255);
  ae:	6f ef       	ldi	r22, 0xFF	; 255
  b0:	ce 01       	movw	r24, r28
  b2:	01 96       	adiw	r24, 0x01	; 1
  b4:	0e 94 2a 02 	call	0x454	; 0x454 <UART_ReceiveString>
       SPI_SendString(Send_Buffer);
  b8:	ce 01       	movw	r24, r28
  ba:	01 96       	adiw	r24, 0x01	; 1
  bc:	0e 94 d6 01 	call	0x3ac	; 0x3ac <SPI_SendString>
  c0:	f6 cf       	rjmp	.-20     	; 0xae <main+0x2c>

000000c2 <DIO_Init>:
  c2:	40 e0       	ldi	r20, 0x00	; 0
  c4:	d2 c0       	rjmp	.+420    	; 0x26a <DIO_Init+0x1a8>
  c6:	84 2f       	mov	r24, r20
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	fc 01       	movw	r30, r24
  cc:	ee 0f       	add	r30, r30
  ce:	ff 1f       	adc	r31, r31
  d0:	e8 0f       	add	r30, r24
  d2:	f9 1f       	adc	r31, r25
  d4:	e0 5a       	subi	r30, 0xA0	; 160
  d6:	ff 4f       	sbci	r31, 0xFF	; 255
  d8:	20 81       	ld	r18, Z
  da:	32 2f       	mov	r19, r18
  dc:	36 95       	lsr	r19
  de:	36 95       	lsr	r19
  e0:	36 95       	lsr	r19
  e2:	27 70       	andi	r18, 0x07	; 7
  e4:	34 30       	cpi	r19, 0x04	; 4
  e6:	08 f0       	brcs	.+2      	; 0xea <DIO_Init+0x28>
  e8:	c5 c0       	rjmp	.+394    	; 0x274 <DIO_Init+0x1b2>
  ea:	31 30       	cpi	r19, 0x01	; 1
  ec:	b1 f1       	breq	.+108    	; 0x15a <DIO_Init+0x98>
  ee:	38 f0       	brcs	.+14     	; 0xfe <DIO_Init+0x3c>
  f0:	32 30       	cpi	r19, 0x02	; 2
  f2:	09 f4       	brne	.+2      	; 0xf6 <DIO_Init+0x34>
  f4:	60 c0       	rjmp	.+192    	; 0x1b6 <DIO_Init+0xf4>
  f6:	33 30       	cpi	r19, 0x03	; 3
  f8:	09 f4       	brne	.+2      	; 0xfc <DIO_Init+0x3a>
  fa:	8a c0       	rjmp	.+276    	; 0x210 <DIO_Init+0x14e>
  fc:	b5 c0       	rjmp	.+362    	; 0x268 <DIO_Init+0x1a6>
  fe:	6a b3       	in	r22, 0x1a	; 26
 100:	e1 e0       	ldi	r30, 0x01	; 1
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	df 01       	movw	r26, r30
 106:	02 c0       	rjmp	.+4      	; 0x10c <DIO_Init+0x4a>
 108:	aa 0f       	add	r26, r26
 10a:	bb 1f       	adc	r27, r27
 10c:	2a 95       	dec	r18
 10e:	e2 f7       	brpl	.-8      	; 0x108 <DIO_Init+0x46>
 110:	9d 01       	movw	r18, r26
 112:	5a 2f       	mov	r21, r26
 114:	50 95       	com	r21
 116:	65 23       	and	r22, r21
 118:	6a bb       	out	0x1a, r22	; 26
 11a:	6b b3       	in	r22, 0x1b	; 27
 11c:	56 23       	and	r21, r22
 11e:	5b bb       	out	0x1b, r21	; 27
 120:	fc 01       	movw	r30, r24
 122:	ee 0f       	add	r30, r30
 124:	ff 1f       	adc	r31, r31
 126:	e8 0f       	add	r30, r24
 128:	f9 1f       	adc	r31, r25
 12a:	e0 5a       	subi	r30, 0xA0	; 160
 12c:	ff 4f       	sbci	r31, 0xFF	; 255
 12e:	51 81       	ldd	r21, Z+1	; 0x01
 130:	55 23       	and	r21, r21
 132:	19 f0       	breq	.+6      	; 0x13a <DIO_Init+0x78>
 134:	5a b3       	in	r21, 0x1a	; 26
 136:	5a 2b       	or	r21, r26
 138:	5a bb       	out	0x1a, r21	; 26
 13a:	fc 01       	movw	r30, r24
 13c:	ee 0f       	add	r30, r30
 13e:	ff 1f       	adc	r31, r31
 140:	8e 0f       	add	r24, r30
 142:	9f 1f       	adc	r25, r31
 144:	fc 01       	movw	r30, r24
 146:	e0 5a       	subi	r30, 0xA0	; 160
 148:	ff 4f       	sbci	r31, 0xFF	; 255
 14a:	82 81       	ldd	r24, Z+2	; 0x02
 14c:	88 23       	and	r24, r24
 14e:	09 f4       	brne	.+2      	; 0x152 <DIO_Init+0x90>
 150:	8b c0       	rjmp	.+278    	; 0x268 <DIO_Init+0x1a6>
 152:	8b b3       	in	r24, 0x1b	; 27
 154:	28 2b       	or	r18, r24
 156:	2b bb       	out	0x1b, r18	; 27
 158:	87 c0       	rjmp	.+270    	; 0x268 <DIO_Init+0x1a6>
 15a:	67 b3       	in	r22, 0x17	; 23
 15c:	e1 e0       	ldi	r30, 0x01	; 1
 15e:	f0 e0       	ldi	r31, 0x00	; 0
 160:	df 01       	movw	r26, r30
 162:	02 c0       	rjmp	.+4      	; 0x168 <DIO_Init+0xa6>
 164:	aa 0f       	add	r26, r26
 166:	bb 1f       	adc	r27, r27
 168:	2a 95       	dec	r18
 16a:	e2 f7       	brpl	.-8      	; 0x164 <DIO_Init+0xa2>
 16c:	9d 01       	movw	r18, r26
 16e:	5a 2f       	mov	r21, r26
 170:	50 95       	com	r21
 172:	65 23       	and	r22, r21
 174:	67 bb       	out	0x17, r22	; 23
 176:	68 b3       	in	r22, 0x18	; 24
 178:	56 23       	and	r21, r22
 17a:	58 bb       	out	0x18, r21	; 24
 17c:	fc 01       	movw	r30, r24
 17e:	ee 0f       	add	r30, r30
 180:	ff 1f       	adc	r31, r31
 182:	e8 0f       	add	r30, r24
 184:	f9 1f       	adc	r31, r25
 186:	e0 5a       	subi	r30, 0xA0	; 160
 188:	ff 4f       	sbci	r31, 0xFF	; 255
 18a:	51 81       	ldd	r21, Z+1	; 0x01
 18c:	55 23       	and	r21, r21
 18e:	19 f0       	breq	.+6      	; 0x196 <DIO_Init+0xd4>
 190:	57 b3       	in	r21, 0x17	; 23
 192:	5a 2b       	or	r21, r26
 194:	57 bb       	out	0x17, r21	; 23
 196:	fc 01       	movw	r30, r24
 198:	ee 0f       	add	r30, r30
 19a:	ff 1f       	adc	r31, r31
 19c:	8e 0f       	add	r24, r30
 19e:	9f 1f       	adc	r25, r31
 1a0:	fc 01       	movw	r30, r24
 1a2:	e0 5a       	subi	r30, 0xA0	; 160
 1a4:	ff 4f       	sbci	r31, 0xFF	; 255
 1a6:	82 81       	ldd	r24, Z+2	; 0x02
 1a8:	88 23       	and	r24, r24
 1aa:	09 f4       	brne	.+2      	; 0x1ae <DIO_Init+0xec>
 1ac:	5d c0       	rjmp	.+186    	; 0x268 <DIO_Init+0x1a6>
 1ae:	88 b3       	in	r24, 0x18	; 24
 1b0:	28 2b       	or	r18, r24
 1b2:	28 bb       	out	0x18, r18	; 24
 1b4:	59 c0       	rjmp	.+178    	; 0x268 <DIO_Init+0x1a6>
 1b6:	64 b3       	in	r22, 0x14	; 20
 1b8:	e1 e0       	ldi	r30, 0x01	; 1
 1ba:	f0 e0       	ldi	r31, 0x00	; 0
 1bc:	df 01       	movw	r26, r30
 1be:	02 c0       	rjmp	.+4      	; 0x1c4 <DIO_Init+0x102>
 1c0:	aa 0f       	add	r26, r26
 1c2:	bb 1f       	adc	r27, r27
 1c4:	2a 95       	dec	r18
 1c6:	e2 f7       	brpl	.-8      	; 0x1c0 <DIO_Init+0xfe>
 1c8:	9d 01       	movw	r18, r26
 1ca:	5a 2f       	mov	r21, r26
 1cc:	50 95       	com	r21
 1ce:	65 23       	and	r22, r21
 1d0:	64 bb       	out	0x14, r22	; 20
 1d2:	65 b3       	in	r22, 0x15	; 21
 1d4:	56 23       	and	r21, r22
 1d6:	55 bb       	out	0x15, r21	; 21
 1d8:	fc 01       	movw	r30, r24
 1da:	ee 0f       	add	r30, r30
 1dc:	ff 1f       	adc	r31, r31
 1de:	e8 0f       	add	r30, r24
 1e0:	f9 1f       	adc	r31, r25
 1e2:	e0 5a       	subi	r30, 0xA0	; 160
 1e4:	ff 4f       	sbci	r31, 0xFF	; 255
 1e6:	51 81       	ldd	r21, Z+1	; 0x01
 1e8:	55 23       	and	r21, r21
 1ea:	19 f0       	breq	.+6      	; 0x1f2 <DIO_Init+0x130>
 1ec:	54 b3       	in	r21, 0x14	; 20
 1ee:	5a 2b       	or	r21, r26
 1f0:	54 bb       	out	0x14, r21	; 20
 1f2:	fc 01       	movw	r30, r24
 1f4:	ee 0f       	add	r30, r30
 1f6:	ff 1f       	adc	r31, r31
 1f8:	8e 0f       	add	r24, r30
 1fa:	9f 1f       	adc	r25, r31
 1fc:	fc 01       	movw	r30, r24
 1fe:	e0 5a       	subi	r30, 0xA0	; 160
 200:	ff 4f       	sbci	r31, 0xFF	; 255
 202:	82 81       	ldd	r24, Z+2	; 0x02
 204:	88 23       	and	r24, r24
 206:	81 f1       	breq	.+96     	; 0x268 <DIO_Init+0x1a6>
 208:	85 b3       	in	r24, 0x15	; 21
 20a:	28 2b       	or	r18, r24
 20c:	25 bb       	out	0x15, r18	; 21
 20e:	2c c0       	rjmp	.+88     	; 0x268 <DIO_Init+0x1a6>
 210:	61 b3       	in	r22, 0x11	; 17
 212:	e1 e0       	ldi	r30, 0x01	; 1
 214:	f0 e0       	ldi	r31, 0x00	; 0
 216:	df 01       	movw	r26, r30
 218:	02 c0       	rjmp	.+4      	; 0x21e <DIO_Init+0x15c>
 21a:	aa 0f       	add	r26, r26
 21c:	bb 1f       	adc	r27, r27
 21e:	2a 95       	dec	r18
 220:	e2 f7       	brpl	.-8      	; 0x21a <DIO_Init+0x158>
 222:	9d 01       	movw	r18, r26
 224:	5a 2f       	mov	r21, r26
 226:	50 95       	com	r21
 228:	65 23       	and	r22, r21
 22a:	61 bb       	out	0x11, r22	; 17
 22c:	62 b3       	in	r22, 0x12	; 18
 22e:	56 23       	and	r21, r22
 230:	52 bb       	out	0x12, r21	; 18
 232:	fc 01       	movw	r30, r24
 234:	ee 0f       	add	r30, r30
 236:	ff 1f       	adc	r31, r31
 238:	e8 0f       	add	r30, r24
 23a:	f9 1f       	adc	r31, r25
 23c:	e0 5a       	subi	r30, 0xA0	; 160
 23e:	ff 4f       	sbci	r31, 0xFF	; 255
 240:	51 81       	ldd	r21, Z+1	; 0x01
 242:	55 23       	and	r21, r21
 244:	19 f0       	breq	.+6      	; 0x24c <DIO_Init+0x18a>
 246:	51 b3       	in	r21, 0x11	; 17
 248:	5a 2b       	or	r21, r26
 24a:	51 bb       	out	0x11, r21	; 17
 24c:	fc 01       	movw	r30, r24
 24e:	ee 0f       	add	r30, r30
 250:	ff 1f       	adc	r31, r31
 252:	8e 0f       	add	r24, r30
 254:	9f 1f       	adc	r25, r31
 256:	fc 01       	movw	r30, r24
 258:	e0 5a       	subi	r30, 0xA0	; 160
 25a:	ff 4f       	sbci	r31, 0xFF	; 255
 25c:	82 81       	ldd	r24, Z+2	; 0x02
 25e:	88 23       	and	r24, r24
 260:	19 f0       	breq	.+6      	; 0x268 <DIO_Init+0x1a6>
 262:	82 b3       	in	r24, 0x12	; 18
 264:	28 2b       	or	r18, r24
 266:	22 bb       	out	0x12, r18	; 18
 268:	4f 5f       	subi	r20, 0xFF	; 255
 26a:	45 30       	cpi	r20, 0x05	; 5
 26c:	08 f4       	brcc	.+2      	; 0x270 <DIO_Init+0x1ae>
 26e:	2b cf       	rjmp	.-426    	; 0xc6 <DIO_Init+0x4>
 270:	81 e0       	ldi	r24, 0x01	; 1
 272:	08 95       	ret
 274:	80 e0       	ldi	r24, 0x00	; 0
 276:	08 95       	ret

00000278 <DIO_Write>:
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	fc 01       	movw	r30, r24
 27c:	ee 0f       	add	r30, r30
 27e:	ff 1f       	adc	r31, r31
 280:	e8 0f       	add	r30, r24
 282:	f9 1f       	adc	r31, r25
 284:	e0 5a       	subi	r30, 0xA0	; 160
 286:	ff 4f       	sbci	r31, 0xFF	; 255
 288:	20 81       	ld	r18, Z
 28a:	32 2f       	mov	r19, r18
 28c:	36 95       	lsr	r19
 28e:	36 95       	lsr	r19
 290:	36 95       	lsr	r19
 292:	27 70       	andi	r18, 0x07	; 7
 294:	34 30       	cpi	r19, 0x04	; 4
 296:	08 f0       	brcs	.+2      	; 0x29a <DIO_Write+0x22>
 298:	61 c0       	rjmp	.+194    	; 0x35c <DIO_Write+0xe4>
 29a:	fc 01       	movw	r30, r24
 29c:	ee 0f       	add	r30, r30
 29e:	ff 1f       	adc	r31, r31
 2a0:	8e 0f       	add	r24, r30
 2a2:	9f 1f       	adc	r25, r31
 2a4:	fc 01       	movw	r30, r24
 2a6:	e0 5a       	subi	r30, 0xA0	; 160
 2a8:	ff 4f       	sbci	r31, 0xFF	; 255
 2aa:	81 81       	ldd	r24, Z+1	; 0x01
 2ac:	88 23       	and	r24, r24
 2ae:	09 f4       	brne	.+2      	; 0x2b2 <DIO_Write+0x3a>
 2b0:	57 c0       	rjmp	.+174    	; 0x360 <DIO_Write+0xe8>
 2b2:	31 30       	cpi	r19, 0x01	; 1
 2b4:	d1 f0       	breq	.+52     	; 0x2ea <DIO_Write+0x72>
 2b6:	28 f0       	brcs	.+10     	; 0x2c2 <DIO_Write+0x4a>
 2b8:	32 30       	cpi	r19, 0x02	; 2
 2ba:	51 f1       	breq	.+84     	; 0x310 <DIO_Write+0x98>
 2bc:	33 30       	cpi	r19, 0x03	; 3
 2be:	d9 f1       	breq	.+118    	; 0x336 <DIO_Write+0xbe>
 2c0:	51 c0       	rjmp	.+162    	; 0x364 <DIO_Write+0xec>
 2c2:	3b b3       	in	r19, 0x1b	; 27
 2c4:	81 e0       	ldi	r24, 0x01	; 1
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	02 c0       	rjmp	.+4      	; 0x2ce <DIO_Write+0x56>
 2ca:	88 0f       	add	r24, r24
 2cc:	99 1f       	adc	r25, r25
 2ce:	2a 95       	dec	r18
 2d0:	e2 f7       	brpl	.-8      	; 0x2ca <DIO_Write+0x52>
 2d2:	28 2f       	mov	r18, r24
 2d4:	20 95       	com	r18
 2d6:	23 23       	and	r18, r19
 2d8:	2b bb       	out	0x1b, r18	; 27
 2da:	66 23       	and	r22, r22
 2dc:	09 f4       	brne	.+2      	; 0x2e0 <DIO_Write+0x68>
 2de:	44 c0       	rjmp	.+136    	; 0x368 <DIO_Write+0xf0>
 2e0:	9b b3       	in	r25, 0x1b	; 27
 2e2:	89 2b       	or	r24, r25
 2e4:	8b bb       	out	0x1b, r24	; 27
 2e6:	81 e0       	ldi	r24, 0x01	; 1
 2e8:	08 95       	ret
 2ea:	38 b3       	in	r19, 0x18	; 24
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <DIO_Write+0x7e>
 2f2:	88 0f       	add	r24, r24
 2f4:	99 1f       	adc	r25, r25
 2f6:	2a 95       	dec	r18
 2f8:	e2 f7       	brpl	.-8      	; 0x2f2 <DIO_Write+0x7a>
 2fa:	28 2f       	mov	r18, r24
 2fc:	20 95       	com	r18
 2fe:	23 23       	and	r18, r19
 300:	28 bb       	out	0x18, r18	; 24
 302:	66 23       	and	r22, r22
 304:	99 f1       	breq	.+102    	; 0x36c <DIO_Write+0xf4>
 306:	98 b3       	in	r25, 0x18	; 24
 308:	89 2b       	or	r24, r25
 30a:	88 bb       	out	0x18, r24	; 24
 30c:	81 e0       	ldi	r24, 0x01	; 1
 30e:	08 95       	ret
 310:	35 b3       	in	r19, 0x15	; 21
 312:	81 e0       	ldi	r24, 0x01	; 1
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	02 c0       	rjmp	.+4      	; 0x31c <DIO_Write+0xa4>
 318:	88 0f       	add	r24, r24
 31a:	99 1f       	adc	r25, r25
 31c:	2a 95       	dec	r18
 31e:	e2 f7       	brpl	.-8      	; 0x318 <DIO_Write+0xa0>
 320:	28 2f       	mov	r18, r24
 322:	20 95       	com	r18
 324:	23 23       	and	r18, r19
 326:	25 bb       	out	0x15, r18	; 21
 328:	66 23       	and	r22, r22
 32a:	11 f1       	breq	.+68     	; 0x370 <DIO_Write+0xf8>
 32c:	95 b3       	in	r25, 0x15	; 21
 32e:	89 2b       	or	r24, r25
 330:	85 bb       	out	0x15, r24	; 21
 332:	81 e0       	ldi	r24, 0x01	; 1
 334:	08 95       	ret
 336:	32 b3       	in	r19, 0x12	; 18
 338:	81 e0       	ldi	r24, 0x01	; 1
 33a:	90 e0       	ldi	r25, 0x00	; 0
 33c:	02 c0       	rjmp	.+4      	; 0x342 <DIO_Write+0xca>
 33e:	88 0f       	add	r24, r24
 340:	99 1f       	adc	r25, r25
 342:	2a 95       	dec	r18
 344:	e2 f7       	brpl	.-8      	; 0x33e <DIO_Write+0xc6>
 346:	28 2f       	mov	r18, r24
 348:	20 95       	com	r18
 34a:	23 23       	and	r18, r19
 34c:	22 bb       	out	0x12, r18	; 18
 34e:	66 23       	and	r22, r22
 350:	89 f0       	breq	.+34     	; 0x374 <DIO_Write+0xfc>
 352:	92 b3       	in	r25, 0x12	; 18
 354:	89 2b       	or	r24, r25
 356:	82 bb       	out	0x12, r24	; 18
 358:	81 e0       	ldi	r24, 0x01	; 1
 35a:	08 95       	ret
 35c:	80 e0       	ldi	r24, 0x00	; 0
 35e:	08 95       	ret
 360:	80 e0       	ldi	r24, 0x00	; 0
 362:	08 95       	ret
 364:	81 e0       	ldi	r24, 0x01	; 1
 366:	08 95       	ret
 368:	81 e0       	ldi	r24, 0x01	; 1
 36a:	08 95       	ret
 36c:	81 e0       	ldi	r24, 0x01	; 1
 36e:	08 95       	ret
 370:	81 e0       	ldi	r24, 0x01	; 1
 372:	08 95       	ret
 374:	81 e0       	ldi	r24, 0x01	; 1
 376:	08 95       	ret

00000378 <SPI_Init>:
   SPDR_R= *pu8Data;
   while (!GET_BIT(SPSR_R,SPIF_B));
   *pu8Data=SPDR_R;
   DIO_Write(SPI_SS0,HIGH);
   return SUCCESS;
}
 378:	0e 94 61 00 	call	0xc2	; 0xc2 <DIO_Init>
 37c:	8d b1       	in	r24, 0x0d	; 13
 37e:	80 61       	ori	r24, 0x10	; 16
 380:	8d b9       	out	0x0d, r24	; 13
 382:	8d b1       	in	r24, 0x0d	; 13
 384:	80 64       	ori	r24, 0x40	; 64
 386:	8d b9       	out	0x0d, r24	; 13
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	08 95       	ret

0000038c <SPI_SendData>:
 38c:	cf 93       	push	r28
 38e:	c8 2f       	mov	r28, r24
 390:	60 e0       	ldi	r22, 0x00	; 0
 392:	80 e0       	ldi	r24, 0x00	; 0
 394:	0e 94 3c 01 	call	0x278	; 0x278 <DIO_Write>
 398:	cf b9       	out	0x0f, r28	; 15
 39a:	77 9b       	sbis	0x0e, 7	; 14
 39c:	fe cf       	rjmp	.-4      	; 0x39a <SPI_SendData+0xe>
 39e:	61 e0       	ldi	r22, 0x01	; 1
 3a0:	80 e0       	ldi	r24, 0x00	; 0
 3a2:	0e 94 3c 01 	call	0x278	; 0x278 <DIO_Write>
 3a6:	81 e0       	ldi	r24, 0x01	; 1
 3a8:	cf 91       	pop	r28
 3aa:	08 95       	ret

000003ac <SPI_SendString>:
}

#endif

 enuErrorStatus_t SPI_SendString(uint8_t *pu8Data)
 {
 3ac:	0f 93       	push	r16
 3ae:	1f 93       	push	r17
 3b0:	cf 93       	push	r28
 3b2:	8c 01       	movw	r16, r24
     uint8_t u8i;
     //loop on the string
     for (u8i=0;pu8Data[u8i];u8i++)
 3b4:	c0 e0       	ldi	r28, 0x00	; 0
 3b6:	03 c0       	rjmp	.+6      	; 0x3be <SPI_SendString+0x12>
     {
        //send each character independently
        SPI_SendData(*(pu8Data+u8i));
 3b8:	0e 94 c6 01 	call	0x38c	; 0x38c <SPI_SendData>

 enuErrorStatus_t SPI_SendString(uint8_t *pu8Data)
 {
     uint8_t u8i;
     //loop on the string
     for (u8i=0;pu8Data[u8i];u8i++)
 3bc:	cf 5f       	subi	r28, 0xFF	; 255
 3be:	f8 01       	movw	r30, r16
 3c0:	ec 0f       	add	r30, r28
 3c2:	f1 1d       	adc	r31, r1
 3c4:	80 81       	ld	r24, Z
 3c6:	81 11       	cpse	r24, r1
 3c8:	f7 cf       	rjmp	.-18     	; 0x3b8 <SPI_SendString+0xc>
     {
        //send each character independently
        SPI_SendData(*(pu8Data+u8i));
     }
     //send termination characters when done
     SPI_SendData('\r');
 3ca:	8d e0       	ldi	r24, 0x0D	; 13
 3cc:	0e 94 c6 01 	call	0x38c	; 0x38c <SPI_SendData>
     SPI_SendData('\n');
 3d0:	8a e0       	ldi	r24, 0x0A	; 10
 3d2:	0e 94 c6 01 	call	0x38c	; 0x38c <SPI_SendData>
     
     return SUCCESS;
 }
 3d6:	81 e0       	ldi	r24, 0x01	; 1
 3d8:	cf 91       	pop	r28
 3da:	1f 91       	pop	r17
 3dc:	0f 91       	pop	r16
 3de:	08 95       	ret

000003e0 <UART_Init>:
 3e0:	cf 93       	push	r28
 3e2:	df 93       	push	r29
 3e4:	1f 92       	push	r1
 3e6:	cd b7       	in	r28, 0x3d	; 61
 3e8:	de b7       	in	r29, 0x3e	; 62
 3ea:	19 82       	std	Y+1, r1	; 0x01
 3ec:	10 bc       	out	0x20, r1	; 32
 3ee:	83 e3       	ldi	r24, 0x33	; 51
 3f0:	89 b9       	out	0x09, r24	; 9
 3f2:	8a b1       	in	r24, 0x0a	; 10
 3f4:	88 60       	ori	r24, 0x08	; 8
 3f6:	8a b9       	out	0x0a, r24	; 10
 3f8:	8a b1       	in	r24, 0x0a	; 10
 3fa:	80 61       	ori	r24, 0x10	; 16
 3fc:	8a b9       	out	0x0a, r24	; 10
 3fe:	89 81       	ldd	r24, Y+1	; 0x01
 400:	82 60       	ori	r24, 0x02	; 2
 402:	89 83       	std	Y+1, r24	; 0x01
 404:	89 81       	ldd	r24, Y+1	; 0x01
 406:	84 60       	ori	r24, 0x04	; 4
 408:	89 83       	std	Y+1, r24	; 0x01
 40a:	8a b1       	in	r24, 0x0a	; 10
 40c:	8b 7f       	andi	r24, 0xFB	; 251
 40e:	8a b9       	out	0x0a, r24	; 10
 410:	89 81       	ldd	r24, Y+1	; 0x01
 412:	80 62       	ori	r24, 0x20	; 32
 414:	89 83       	std	Y+1, r24	; 0x01
 416:	80 b5       	in	r24, 0x20	; 32
 418:	80 68       	ori	r24, 0x80	; 128
 41a:	80 bd       	out	0x20, r24	; 32
 41c:	99 81       	ldd	r25, Y+1	; 0x01
 41e:	80 b5       	in	r24, 0x20	; 32
 420:	89 2b       	or	r24, r25
 422:	80 bd       	out	0x20, r24	; 32
 424:	80 b5       	in	r24, 0x20	; 32
 426:	8f 77       	andi	r24, 0x7F	; 127
 428:	80 bd       	out	0x20, r24	; 32
 42a:	81 e0       	ldi	r24, 0x01	; 1
 42c:	0f 90       	pop	r0
 42e:	df 91       	pop	r29
 430:	cf 91       	pop	r28
 432:	08 95       	ret

00000434 <UART_ReceiveData>:
 434:	00 97       	sbiw	r24, 0x00	; 0
 436:	61 f0       	breq	.+24     	; 0x450 <UART_ReceiveData+0x1c>
 438:	fc 01       	movw	r30, r24
 43a:	11 82       	std	Z+1, r1	; 0x01
 43c:	10 82       	st	Z, r1
 43e:	5f 9b       	sbis	0x0b, 7	; 11
 440:	fe cf       	rjmp	.-4      	; 0x43e <UART_ReceiveData+0xa>
 442:	2c b1       	in	r18, 0x0c	; 12
 444:	30 e0       	ldi	r19, 0x00	; 0
 446:	fc 01       	movw	r30, r24
 448:	31 83       	std	Z+1, r19	; 0x01
 44a:	20 83       	st	Z, r18
 44c:	81 e0       	ldi	r24, 0x01	; 1
 44e:	08 95       	ret
 450:	80 e0       	ldi	r24, 0x00	; 0
 452:	08 95       	ret

00000454 <UART_ReceiveString>:
 454:	ef 92       	push	r14
 456:	ff 92       	push	r15
 458:	0f 93       	push	r16
 45a:	1f 93       	push	r17
 45c:	cf 93       	push	r28
 45e:	df 93       	push	r29
 460:	8c 01       	movw	r16, r24
 462:	d6 2f       	mov	r29, r22
 464:	c0 e0       	ldi	r28, 0x00	; 0
 466:	0d c0       	rjmp	.+26     	; 0x482 <UART_ReceiveString+0x2e>
 468:	78 01       	movw	r14, r16
 46a:	ec 0e       	add	r14, r28
 46c:	f1 1c       	adc	r15, r1
 46e:	c7 01       	movw	r24, r14
 470:	0e 94 1a 02 	call	0x434	; 0x434 <UART_ReceiveData>
 474:	f7 01       	movw	r30, r14
 476:	80 81       	ld	r24, Z
 478:	8d 30       	cpi	r24, 0x0D	; 13
 47a:	59 f0       	breq	.+22     	; 0x492 <UART_ReceiveString+0x3e>
 47c:	8a 30       	cpi	r24, 0x0A	; 10
 47e:	49 f0       	breq	.+18     	; 0x492 <UART_ReceiveString+0x3e>
 480:	cf 5f       	subi	r28, 0xFF	; 255
 482:	2c 2f       	mov	r18, r28
 484:	30 e0       	ldi	r19, 0x00	; 0
 486:	8d 2f       	mov	r24, r29
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	01 97       	sbiw	r24, 0x01	; 1
 48c:	28 17       	cp	r18, r24
 48e:	39 07       	cpc	r19, r25
 490:	5c f3       	brlt	.-42     	; 0x468 <UART_ReceiveString+0x14>
 492:	f8 01       	movw	r30, r16
 494:	ec 0f       	add	r30, r28
 496:	f1 1d       	adc	r31, r1
 498:	10 82       	st	Z, r1
 49a:	81 e0       	ldi	r24, 0x01	; 1
 49c:	df 91       	pop	r29
 49e:	cf 91       	pop	r28
 4a0:	1f 91       	pop	r17
 4a2:	0f 91       	pop	r16
 4a4:	ff 90       	pop	r15
 4a6:	ef 90       	pop	r14
 4a8:	08 95       	ret

000004aa <_exit>:
 4aa:	f8 94       	cli

000004ac <__stop_program>:
 4ac:	ff cf       	rjmp	.-2      	; 0x4ac <__stop_program>
